<?php

namespace App\Http\Controllers\MifraCruds;

use Illuminate\Http\Request;
use Illuminate\Routing\Controller;
use Illuminate\Support\Facades\DB;
use Mifra\Crud\Helpers\CrudHelpers;
use Illuminate\Support\Facades\File;

class {{crud_name}}Controller extends Controller
{
    public function index()
    {
        $database = config('mifracrud.database');

        // Recupera tutti gli elementi dalla collezione di partenza
        $items = DB::connection('mongodb')->collection($database['collection'])->get();

        // Preparare un array per contenere gli elementi arricchiti con i nomi dei gruppi
        $itemsWithGroupNames = [];

        // Cicla sugli elementi per recuperare i nomi dei gruppi dalla seconda collezione
        foreach ($items as $item) {
            // Assicurati che l'elemento abbia un campo 'group'
            if (isset($item['group'])) {
                // Recupera il gruppo corrispondente dall'altra collezione
                $group = DB::connection('mongodb')->collection($database['group'])->where('group', $item['group'])->first();

                // Aggiungi il nome del gruppo all'elemento, se il gruppo esiste
                if ($group) {
                    $item['groupName'] = $group['title']; // Assumendo che il gruppo abbia un campo 'name'
                } else {
                    // Gestisci il caso in cui il gruppo non viene trovato
                    $item['groupName'] = 'Gruppo non trovato';
                }
            } else {
                // Gestisci il caso in cui l'elemento non abbia un campo 'group'
                $item['groupName'] = 'Nessun gruppo';
            }

            // Aggiungi l'elemento arricchito all'array di risultati
            $itemsWithGroupNames[] = $item;
        }

        return view('{{route_name}}.index')
            ->with('items', collect($itemsWithGroupNames));
    }

    public function delete($data)
    {
        $className = CrudHelpers::conversionRouteName($data['route_name'], 'className');
        $path = CrudHelpers::conversionRouteName($data['route_name'], 'path');

        // Percorso del file che vuoi cancellare
        $controllerFile = base_path('app/Http/Controllers/MifraCruds/'.$className.'Controller.php');
        // Controlla se il file controller esiste e cancellalo
        if (File::exists($controllerFile)) {
            File::delete($controllerFile);
        }
        
        // Percorso del file che vuoi cancellare
        $modelFile = base_path('app/Models/MifraCruds'.$className.'Model.php');
        // Controlla se il file model esiste e cancellalo
        if (File::exists($modelFile)) {
            File::delete($modelFile);
        }

        // Rimuovere i file delle view
        $viewFile = base_path('resources/views/'.$path);
        if (File::exists($viewFile)) {
            File::deleteDirectory($viewFile);
        }

        // Percorso del file che vuoi cancellare
        $routeFile = base_path('routes/mifracruds/'.$path.'.php');
        // Controlla se il file controller esiste e cancellalo
        if (File::exists($routeFile)) {
            File::delete($routeFile);
        }

        // Percorso al file web.php
        $fileRouteWeb = base_path('routes/cruds.php');
        // Leggi il contenuto del file
        $contentRouteWeb = File::get($fileRouteWeb);
        // Rimuovi la riga
        $updatedContentRouteWeb = str_replace("require __DIR__ . '/".$path.".php';\n", '', $contentRouteWeb);
        // Salva il file aggiornato
        File::put($fileRouteWeb, $updatedContentRouteWeb);

        $database = config('mifracrud.database');
        DB::connection('mongodb')->collection($database['collection'])->where('id', $data['id'])->delete();
    }
}
