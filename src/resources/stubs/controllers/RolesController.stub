<?php

namespace App\Http\Controllers\MifraCruds;

use Illuminate\Http\Request;
use Illuminate\Routing\Controller;
use Illuminate\Support\Facades\DB;
use App\Models\MifraCruds\MifracrudsRolesModel;
use Mifra\Crud\Helpers\CrudHelpers;

class {{crud_name}}Controller extends Controller
{
    public function index()
    {
        $database = config('mifracrud.database');

        $menu = DB::connection('mongodb')->collection($database['collection'])->where('route_name','{{route_name}}')->first();

        $items = MifracrudsRolesModel::with('permissions_crud')->get();
        
        $path = CrudHelpers::conversionRouteName($menu['route_name'], 'path');
        $name = str_replace("mifracruds/", "", $path);

        $contents = [
            "title" => $menu['title'],
            "route_name" => $path, // rotta per da utilizzare su tabulator per edit, create, update e delete
            "controller_name" => 'App\\Http\\Controllers\\MifraCruds\\{{crud_name}}Controller',
            'init_sort' => [0 => ['column' => 'name', 'dir' => 'asc']],
            'filters_top_bar_tabulator' => [
                "list" => [
                    "name" => "Nome",
                    ]
                ,
                "reset" => "name"
            ],
        ];

        return view('{{route_name}}.index')
            ->with('contents', $contents)
            ->with('items', collect($items));
    }

    public function edit(Request $request)
    {
        $id = $request->id;
        $modalID = $request->modal_id;
        $view = $request->view;
        $routeName = $request->route_name;

        // Restituisce la vista con le variabili passate dinamicamente
        return view($view, compact('id', 'modalID', 'routeName'));
    }

    public function update(Request $request, $id)
    {
        
    }

    public function create(Request $request)
    {
        
    }

    public function delete(Request $request, $id)
    {
        
    }
}
